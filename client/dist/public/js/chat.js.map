{"version":3,"file":"chat.js","mappings":"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","sources":["webpack://Chat App Client Side/webpack/bootstrap","webpack://Chat App Client Side/webpack/runtime/define property getters","webpack://Chat App Client Side/webpack/runtime/hasOwnProperty shorthand","webpack://Chat App Client Side/webpack/runtime/make namespace object","webpack://Chat App Client Side/./node_modules/engine.io-parser/build/esm/commons.js","webpack://Chat App Client Side/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://Chat App Client Side/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://Chat App Client Side/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://Chat App Client Side/./node_modules/engine.io-parser/build/esm/index.js","webpack://Chat App Client Side/./node_modules/@socket.io/component-emitter/index.mjs","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/util.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/transport.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/socket.js","webpack://Chat App Client Side/./node_modules/engine.io-client/build/esm/index.js","webpack://Chat App Client Side/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://Chat App Client Side/./node_modules/socket.io-parser/build/esm/binary.js","webpack://Chat App Client Side/./node_modules/socket.io-parser/build/esm/index.js","webpack://Chat App Client Side/./node_modules/socket.io-client/build/esm/on.js","webpack://Chat App Client Side/./node_modules/socket.io-client/build/esm/socket.js","webpack://Chat App Client Side/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://Chat App Client Side/./node_modules/socket.io-client/build/esm/manager.js","webpack://Chat App Client Side/./node_modules/socket.io-client/build/esm/index.js","webpack://Chat App Client Side/./node_modules/socket.io-client/build/esm/url.js","webpack://Chat App Client Side/./src/public/js/utils.js","webpack://Chat App Client Side/./src/public/js/buildMsg.js","webpack://Chat App Client Side/./src/public/js/fetch.js","webpack://Chat App Client Side/./src/public/js/chat.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","/*\n * first 5 symbols (i.e 00:12)\n * @param createdAt - date of message creation\n * @returns `hour:minute` of creation\n */\n//first 5 symbols (0,1,2,3,4)\nexport function msgDate(createdAt) {\n    return new Date(createdAt).toTimeString().substr(0, 5);\n}\n/**\n * Creates html element with attributes\n * @param name - html string name\n * attributes object with key values\n * @returns html element\n */\nexport function htmlCreate(name, attributes = {}) {\n    const element = document.createElement(name);\n    for (const attr in attributes) {\n        element.setAttribute(attr, attributes[attr]);\n    }\n    return element;\n}\n\n// Creates the <select> element for the messgaes\nexport function createSelect() {\n    const select = htmlCreate(\"select\", {\n        class: \"messageItem_select\",\n        name: \"messageItemSelect\",\n    });\n    const options = [\"*\", \"delete\", \"update\"];\n    options.forEach((option) => {\n        const element = htmlCreate(\"option\", { value: option });\n        element.innerText = option.charAt(0).toUpperCase() + option.slice(1);\n        select.append(element);\n    });\n    return select;\n}\n\n/*\n * When user presses any action like `delete` on a message item,\n * it sends a socket-message to server and gets response\n */\nexport function messageSelectInteraction(socket) {\n    return function (e) {\n        const select = e.currentTarget;\n        let li = select.parentElement;\n        const _id = li.getAttribute(\"data-id\") || undefined;\n        if (_id && select.value === \"delete\") {\n            socket.emit(\"delete\", _id);\n            socket.on(\"deleted\", (ok) => {\n                let em = document.createElement(\"em\");\n                em.textContent = ok;\n                li.innerHTML = \"\";\n                li.append(em);\n            });\n        } else {\n            console.log(\"nothing yet\");\n        }\n    };\n}\n\n/**\n * Takes an li html element and sets the data-tid attribute\n * to a temporary id it makes sure that it is not repeated in the last 100 items.\n * this value is used to locate the element and add a database unique _id upon saving\n * @param items - html li elements. It should receive the last 100 items\n * @returns - temporary id\n */\nexport function tempId(items) {\n    const tid = Math.random().toString(10);\n    if (!Array.isArray(items) || items.length == 0) return tid;\n    else {\n        const match = items.some(\n            (item) => item.getAttribute(\"data-tid\") === tid\n        );\n        if (!match) return tid;\n        else {\n            return tempId(items);\n        }\n    }\n}\n\n/* replaces the temporary id for a permanent one generated\n * at the database*/\nexport function replaceTId(element, _id) {\n    element.setAttribute(\"data-id\", _id);\n    element.removeAttribute(\"data-tid\");\n}\n","import { msgDate, htmlCreate, createSelect } from \"./utils.js\";\n\nexport class Message {\n    constructor(data) {\n        const { _id, tid, createdAt, msg } = data;\n        if (_id) this._id = _id;\n        if (tid) this.tid = tid;\n        if (createdAt instanceof Date) {\n            this.createdAt = createdAt;\n        } else {\n            this.createdAt = new Date();\n        }\n        this.msg = msg;\n    }\n}\n/** Create a list item from message.\n * This function is triggered by different actions.\n * 1. when sender hits submit:`msg,createdAt,tid` are defined.\n * 2. when received from DB. `msg, createdAt, _id` are defined.\n * Once this is linked with a unique username/socket,\n * they will be able to act on the message.\n */\nexport function msgToHTML(data) {\n    const { msg: m, createdAt, _id, tid, own } = data;\n    // we build up the message HTML\n    const msg = htmlCreate(\"li\", {\n        \"data-id\": _id || \"\",\n        \"data-tid\": tid || \"\",\n    });\n    const date = htmlCreate(\"span\", { class: \"time\" });\n    date.innerText = msgDate(createdAt);\n    const msgBody = document.createElement(\"span\");\n    msgBody.innerText = m;\n    //prepend elements to list item\n    msg.prepend(date, msgBody);\n    if (!own) return msg;\n    msg.append(createSelect());\n    return msg;\n}\n\nexport function HTMLToDOM(html, target, type = \"append\") {\n    return type === \"prepend\" ? target.prepend(html) : target.append(html);\n}\n","import { HTMLToDOM, msgToHTML } from \"./buildMsg.js\";\n\nconst ul = document.getElementById(\"messages\");\n\nasync function getMsgsAsync(uri, skip, limit) {\n    const route = uri + \"/\" + skip.toString(10) + \"/\" + limit.toString(10);\n    const msgs = await fetch(route).then((d) => d.json());\n    msgs.forEach((msg) => HTMLToDOM(msgToHTML(msg), ul, \"prepend\"));\n}\n\nasync function getLastMsgsAsync(uri) {\n    return await getMsgsAsync(uri, 0, 10);\n}\n\nexport { getMsgsAsync, getLastMsgsAsync };\n","import io from \"socket.io-client\";\n\nimport { Message, msgToHTML, HTMLToDOM } from \"./buildMsg.js\";\nimport { getLastMsgsAsync, getMsgsAsync } from \"./fetch.js\";\nimport { runOverLastItems, tempId } from \"./utils.js\";\n\nconst form = document.querySelector(\"form\");\nconst ul = document.getElementById(\"messages\");\nconst messages = ul.children;\nconst input = document.getElementById(\"m\");\nconst prevMsgs = document.querySelector(\"button#wantMore\");\n\nconst uri = \"http://192.168.178.72:3000\";\n\nasync function main() {\n    //open socket to uri\n    const socket = io();\n\n    await getLastMsgsAsync(uri + \"/messages\");\n\n    prevMsgs.click(() => {\n        const l = parseInt(ul.children.length);\n        getMsgsAsync(`${uri}/messages`, l, l + 10);\n    });\n\n    form.onsubmit = function (e) {\n        /*\n       on input submit append msg to DOM and\n       send to server. On server OK add _id\n       and enable + CRUD operations\n       */\n        e.preventDefault();\n\n        //1. collect the value and reset field\n        const msg = input.value;\n\n        if (!msg) return;\n        input.value = \"\";\n\n        //2. create the HTML list item\n        const toSave = new Message({ msg, tid: tempId(messages) });\n\n        const li = msgToHTML({ ...toSave, own: true });\n\n        //3.A for the sender, append right away, as a preview\n        ul.append(li);\n        //readjust height\n        this.scrollTo(0, this.scrollHeight);\n\n        //4.emit the message to server\n        socket.emit(\"save\", { msg: toSave.msg, tid: toSave.tid });\n\n        //LI interaction\n        let msgOptions = li.querySelector(\".messageItem_select\");\n        msgOptions.onchange = function () {\n            //'this' is the current element target\n            let li = this.parentElement;\n            const _id = li.getAttribute(\"data-id\");\n            if (this.value === \"delete\") {\n                socket.emit(\"delete\", _id);\n                socket.on(\"deleted\", (_id) => {\n                    const em = document.createElement(\"em\");\n                    em.innerText =\n                        \"Message was deleted. It will dissapear in 5 seconds.\";\n                    li.append(em);\n                    setTimeout(() => li.remove(), 1000);\n                });\n            } else {\n                console.log(\"nothing yet\");\n            }\n        };\n    };\n\n    //5.change temporary id to permanent\n    socket.on(\"saved\", ({ _id, tid }) => {\n        for (\n            let i = messages.length - 1;\n            i > messages.length - 200 && i > 0;\n            i--\n        ) {\n            if (messages[i].getAttribute(\"data-tid\") === tid) {\n                messages[i].setAttribute(\"data-id\", _id);\n                messages[i].removeAttribute(\"data-tid\");\nbreak;\n            }\n}\n})\n\n    // client listens for new messages\n    socket.on(\"new\", (data) => {\n        HTMLToDOM(msgToHTML(data),ul);\n        form.scrollTo(0, form.scrollHeight);\n    })\n\n}\nmain().catch((e) => console.log(e))\n\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","supportsBinary","isView","buffer","chars","lookup","Uint8Array","i","length","charCodeAt","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","mapBinary","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","readyState","socket","onError","open","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","alphabet","map","prev","seed","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","async","undefined","xd","xscheme","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","schema","secure","port","Number","timestampRequests","timestampParam","b64","encodedQuery","hostname","indexOf","path","polling","location","isSSL","protocol","poll","pause","onPause","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","sid","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","encode","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","add","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","htmlCreate","attributes","element","createElement","setAttribute","tempId","items","tid","some","item","getAttribute","Message","_id","createdAt","msgToHTML","own","date","class","innerText","toTimeString","msgDate","msgBody","prepend","append","select","option","toUpperCase","createSelect","HTMLToDOM","html","target","ul","getElementById","getMsgsAsync","skip","limit","route","fetch","d","json","querySelector","messages","children","input","prevMsgs","getLastMsgsAsync","click","parseInt","onsubmit","preventDefault","toSave","li","scrollTo","scrollHeight","onchange","parentElement","em","remove","console","log","removeAttribute","main","catch"],"sourceRoot":""}